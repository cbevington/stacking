##Use this ini file to get stacking points
##All fwhms are in unit arcmin

#supported formats: HEALPIX or RA-DEC
format = HEALPIX

#********************  INPUT FILE **********************
#the original map file (the file must be in the working directory); 
map = maps/nilc_ymaps.fits

#the mask file;
#leave it blank if you are doing fullsky mask;
#set it to be AUTOMATIC if you want the mask to be identified from zero regions;
mask = maps/nilc_mask.fits

#the resolution of original map;
fwhm = 10.

#********************  OUTPUT FILE **********************
#Stacking points and orientation information is saved in a fits image (workdir/output) that contains 6 columns:
# pix theta  phi  rotation_angle  xscale  yscale
# pix is the pixel number (for healpix maps use nested ordering)
#(theta, phi) is the spherical coordinate;
# angle defines the local x-axis direction (w.r.t. the horizontal direction)
# xscale is the stretch factor in the local x-axis direction
# yscale is the stretch factor in the local y-axis direction
output = peaks/planck_tt_max_QU_X_UP.fits

#********************  POINT TYPE **********************
## built-in options are:
## MAX: hot peaks
## MIN: cold peaks
## SADDLE: saddle points
## ALL: all points (~uniformly sampled)
point_type = MAX
#point type is defined with what resolution?
#if set to be <= fwhm, will use fwhm (i.e. the original map without smoothing)
fwhm_pt = 10.

#********************  AMPLITUDE SELECTION **********************
#amplitude nu = map/rms(map)
nu_min = 2
nu_max = 1.e30
#peak/saddle and amplitude selection defined with what resolution?
#if set to be <= fwhm, will use fwhm (i.e. the original map without smoothing)
fwhm_nu = 0

#leave it blank, unless you want to use an external scalar map for amplitude selection;
map_nu = 
#********************  ECCENTRICITY SELECTION **********************
#eccentricity of the local Hessian
# e = sqrt{ [(f_xx - f_yy)^2 + f_xy^2] / (f_xx^2 + f_yy^2) }
# on peaks 0<=e<=1;
# on saddle points, e can be > 1; 
e_min = -1.e30
e_max = 1.e30
#local Hessian defined with what resolution?
#if set to be <= fwhm, will use fwhm (i.e. the original map without smoothing)
fwhm_e = 0.

#leave it blank, unless you want to use an external IQU map for eccentricity selection
map_e = 
#********************  ORIENTATION SELECTION **********************
#built-in options are
#ORIGINAL: original orientation
#RANDOM: random orientation
#HESSIAN: local Hessian of the original map
#QU: local Hessian of inverse Laplacian of the original map
orient = QU

#Hessian defined with what resolution?
#if set to be <= fwhm, will use fwhm (i.e. the original map without smoothing)
#only used when orient = Hessian or QU
fwhm_orient = 10.

#leave it blank, unless you want to use an external spin-2 (i.e. QU) map for orientation selection;
map_orient = 
##******************** PARITY SELECTION *****************************
#built-in options are
#SYMMETRIC: symmetric
#X_UP:  enforce \partial_x map > 0 by flipping the patches in x direction
#Y_UP:  enforce \partial_y map > 0 by flipping the patches in y direction
#XY_UP:  enforce \partial_x map > 0 and \partial_y map > 0 by flipping the patches in x/y direction
symmetry = X_UP

#\partial_x map, \partial_y map defined with what resolution?
fwhm_sym = 30.

#leave it blanck, unless you want to use an external spin-1 map for parity selection
map_sym =
#***********************************************************************
